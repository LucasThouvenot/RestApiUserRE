name: Java CI/CD with Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven (skip tests)
        run: mvn -B package -DskipTests --file pom.xml

      - name: Build Docker image
        run: docker build . -t ${{ secrets.DOCKER_HUB_USERNAME }}/api_rest_user_re:latest

      - name: Log in to Docker Hub
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/api_rest_user_re:latest

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add GitHub.com to known_hosts
        run: ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Copy compose.yaml to server
        env:
          SSH_CONNECTION_STRING: ${{ secrets.SSH_CONNECTION_STRING }}
        run: |
          scp -o StrictHostKeyChecking=no compose.yaml "${{ secrets.SSH_CONNECTION_STRING }}:/home/cda-l16/Api/compose.yaml"

      - name: Deploy to Docker Server
        env:
          SSH_CONNECTION_STRING: ${{ secrets.SSH_CONNECTION_STRING }}
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
        run: |
          ssh -o StrictHostKeyChecking=no "${{ secrets.SSH_CONNECTION_STRING }}" "
          docker login -u '${{ secrets.DOCKER_HUB_USERNAME }}' -p '${{ secrets.DOCKER_HUB_PASSWORD }}' &&
          docker-compose -f /home/cda-l16/Api/compose.yaml down &&
          docker-compose -f /home/cda-l16/Api/compose.yaml pull apiuser &&
          docker-compose -f /home/cda-l16/Api/compose.yaml up -d"
